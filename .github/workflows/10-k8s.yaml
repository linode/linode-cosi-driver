# This workflow runs linters on kubernetes resources. It is supposed to be for each push
# in pull request that modifies helm chart.

name: Kubernetes

on:
  pull_request:
    branches: [ '*' ]
    paths:
      - 'helm/**'
  push:
    tags:
      - 'linode-cosi-driver-v*'

env:
  REGISTRY: docker.io
  REPOSITORY: linode

permissions:
  contents: write

jobs:
  linters:
    name: Lint Kubernetes manifests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Scan repo with kube-linter
        uses: stackrox/kube-linter-action@v1
        with:
          directory: helm/
          config: helm/.kube-linter.yaml

  package:
    name: Package helm chart and push it to registry
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/linode-cosi-driver-v') }}
    steps:
      - uses: actions/checkout@v4
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: Capture latest tag if exists
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        with:
          semver_only: true
          with_initial_version: true
          initial_version: v0.0.0
      - name: Set proper tags
        id: tags
        run: |
          ./scripts/tags.sh \
            "${{ env.REGISTRY }}/${{ env.REPOSITORY }}" \
            "${{ github.sha }}" \
            "${{ github.ref_name }}" \
            "${{ steps.get-latest-tag.outputs.tag }}" \
            "${GITHUB_OUTPUT}"
      - name: Setup helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Package artifacts
        run: |
          helm package \
            --destination=release \
            --version=${{ steps.tags.outputs.chart }} \
            helm/linode-cosi-driver
      - name: Push artifcats
        run: |
          helm push \
            ./release/linode-cosi-driver-${{ steps.tags.outputs.chart }}.tgz \
            oci://${{ env.REGISTRY }}/${{ env.REPOSITORY }}
      - name: Upload Release Artifacts
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          files: |
            ./release/linode-cosi-driver-${{ steps.tags.outputs.chart }}.tgz
