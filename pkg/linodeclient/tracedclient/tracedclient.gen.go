// Code generated by gowrap. DO NOT EDIT.
// template: https://raw.githubusercontent.com/hexdigest/gowrap/6c8f05695fec23df85903a8da0af66ac414e2a63/templates/opentelemetry
// gowrap: http://github.com/hexdigest/gowrap

package tracedclient

//go:generate gowrap gen -p github.com/linode/linode-cosi-driver/pkg/linodeclient -i Client -t https://raw.githubusercontent.com/hexdigest/gowrap/6c8f05695fec23df85903a8da0af66ac414e2a63/templates/opentelemetry -o tracedclient.gen.go -l ""

import (
	"context"

	_sourceLinodeclient "github.com/linode/linode-cosi-driver/pkg/linodeclient"
	"github.com/linode/linodego"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/trace"
)

// ClientWithTracing implements _sourceLinodeclient.Client interface instrumented with opentracing spans
type ClientWithTracing struct {
	_sourceLinodeclient.Client
	_instance      string
	_spanDecorator func(span trace.Span, params, results map[string]interface{})
}

// NewClientWithTracing returns ClientWithTracing
func NewClientWithTracing(base _sourceLinodeclient.Client, instance string, spanDecorator ...func(span trace.Span, params, results map[string]interface{})) ClientWithTracing {
	d := ClientWithTracing{
		Client:    base,
		_instance: instance,
	}

	if len(spanDecorator) > 0 && spanDecorator[0] != nil {
		d._spanDecorator = spanDecorator[0]
	}

	return d
}

// CreateObjectStorageBucket implements _sourceLinodeclient.Client
func (_d ClientWithTracing) CreateObjectStorageBucket(ctx context.Context, o1 linodego.ObjectStorageBucketCreateOptions) (op1 *linodego.ObjectStorageBucket, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "_sourceLinodeclient.Client.CreateObjectStorageBucket")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx": ctx,
				"o1":  o1}, map[string]interface{}{
				"op1": op1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.Client.CreateObjectStorageBucket(ctx, o1)
}

// CreateObjectStorageKey implements _sourceLinodeclient.Client
func (_d ClientWithTracing) CreateObjectStorageKey(ctx context.Context, o1 linodego.ObjectStorageKeyCreateOptions) (op1 *linodego.ObjectStorageKey, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "_sourceLinodeclient.Client.CreateObjectStorageKey")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx": ctx,
				"o1":  o1}, map[string]interface{}{
				"op1": op1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.Client.CreateObjectStorageKey(ctx, o1)
}

// DeleteObjectStorageBucket implements _sourceLinodeclient.Client
func (_d ClientWithTracing) DeleteObjectStorageBucket(ctx context.Context, s1 string, s2 string) (err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "_sourceLinodeclient.Client.DeleteObjectStorageBucket")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx": ctx,
				"s1":  s1,
				"s2":  s2}, map[string]interface{}{
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.Client.DeleteObjectStorageBucket(ctx, s1, s2)
}

// DeleteObjectStorageKey implements _sourceLinodeclient.Client
func (_d ClientWithTracing) DeleteObjectStorageKey(ctx context.Context, i1 int) (err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "_sourceLinodeclient.Client.DeleteObjectStorageKey")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx": ctx,
				"i1":  i1}, map[string]interface{}{
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.Client.DeleteObjectStorageKey(ctx, i1)
}

// GetObjectStorageBucket implements _sourceLinodeclient.Client
func (_d ClientWithTracing) GetObjectStorageBucket(ctx context.Context, s1 string, s2 string) (op1 *linodego.ObjectStorageBucket, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "_sourceLinodeclient.Client.GetObjectStorageBucket")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx": ctx,
				"s1":  s1,
				"s2":  s2}, map[string]interface{}{
				"op1": op1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.Client.GetObjectStorageBucket(ctx, s1, s2)
}

// GetObjectStorageBucketAccess implements _sourceLinodeclient.Client
func (_d ClientWithTracing) GetObjectStorageBucketAccess(ctx context.Context, s1 string, s2 string) (op1 *linodego.ObjectStorageBucketAccess, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "_sourceLinodeclient.Client.GetObjectStorageBucketAccess")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx": ctx,
				"s1":  s1,
				"s2":  s2}, map[string]interface{}{
				"op1": op1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.Client.GetObjectStorageBucketAccess(ctx, s1, s2)
}

// GetObjectStorageKey implements _sourceLinodeclient.Client
func (_d ClientWithTracing) GetObjectStorageKey(ctx context.Context, i1 int) (op1 *linodego.ObjectStorageKey, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "_sourceLinodeclient.Client.GetObjectStorageKey")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx": ctx,
				"i1":  i1}, map[string]interface{}{
				"op1": op1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.Client.GetObjectStorageKey(ctx, i1)
}

// ListObjectStorageKeys implements _sourceLinodeclient.Client
func (_d ClientWithTracing) ListObjectStorageKeys(ctx context.Context, lp1 *linodego.ListOptions) (oa1 []linodego.ObjectStorageKey, err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "_sourceLinodeclient.Client.ListObjectStorageKeys")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx": ctx,
				"lp1": lp1}, map[string]interface{}{
				"oa1": oa1,
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.Client.ListObjectStorageKeys(ctx, lp1)
}

// UpdateObjectStorageBucketAccess implements _sourceLinodeclient.Client
func (_d ClientWithTracing) UpdateObjectStorageBucketAccess(ctx context.Context, s1 string, s2 string, o1 linodego.ObjectStorageBucketUpdateAccessOptions) (err error) {
	ctx, _span := otel.Tracer(_d._instance).Start(ctx, "_sourceLinodeclient.Client.UpdateObjectStorageBucketAccess")
	defer func() {
		if _d._spanDecorator != nil {
			_d._spanDecorator(_span, map[string]interface{}{
				"ctx": ctx,
				"s1":  s1,
				"s2":  s2,
				"o1":  o1}, map[string]interface{}{
				"err": err})
		} else if err != nil {
			_span.RecordError(err)
			_span.SetAttributes(
				attribute.String("event", "error"),
				attribute.String("message", err.Error()),
			)
		}

		_span.End()
	}()
	return _d.Client.UpdateObjectStorageBucketAccess(ctx, s1, s2, o1)
}
